# Generated by Django 5.0 on 2024-10-01 07:44

import django.db.models.deletion
import meta.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('categories', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ImageUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/', verbose_name='Image')),
            ],
            options={
                'db_table': 'ImageUpload',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.CharField(max_length=100, verbose_name='Article name')),
                ('description', models.CharField(max_length=255, verbose_name='Article description')),
                ('location', models.CharField(max_length=100, verbose_name='Article location')),
                ('reserved', models.IntegerField(blank=True, default=0, null=True)),
                ('slug', models.SlugField(unique=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('notification_winner', models.BooleanField(default=True)),
                ('notification_no_bid', models.BooleanField(default=True)),
                ('publish', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, max_length=25, null=True, on_delete=django.db.models.deletion.CASCADE, to='categories.category')),
            ],
            options={
                'db_table': 'Article',
                'ordering': ('created',),
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
    ]
